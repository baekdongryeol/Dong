/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.41
 * Generated at: 2022-01-10 04:20:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.kakaoMapJsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class map01_005fgreenSN_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/D:/MTest/MyWork/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Spring02/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1640065543731L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>** kakao_Map 01 **</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\tspan { color: blue;\r\n");
      out.write("\t }\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"resources/myLib/jquery-3.2.1.min.js\"></script>\r\n");
      out.write("\t\r\n");
      out.write("<!--\r\n");
      out.write("** Kakao맵 API키 발급받기\r\n");
      out.write("=> 참고  https://aljjabaegi.tistory.com/421\r\n");
      out.write("=> 카카오 개발자 페이지로 이동  : https://developers.kakao.com/\r\n");
      out.write("=> 회원가입, 로그인, 앱 만들기 , 앱키 받고(Javascript 키 copy 하기) , 플랫폼 등록(앱키 아랫쪽에 있음)\r\n");
      out.write("=> Javascript 키 : 6eab7e540c63cc902e58d714fe462eb2 (적용)\r\n");
      out.write("=> http://apis.map.kakao.com/web/sample/ \r\n");
      out.write("-->\t\r\n");
      out.write("<script type=\"text/javascript\" \r\n");
      out.write("\t    src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=6eab7e540c63cc902e58d714fe462eb2&libraries=services\">\r\n");
      out.write("</script>\t\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<h2>Welcome! 그린컴퓨터아카데미 </h2>\r\n");
      out.write("<font color=\"gray\"><b>성남시 분당구 구미동 7-2(돌마로 46) 5층, 대표번호: 031.712.7447</b></font><br>\r\n");
      out.write("<br>\r\n");
      out.write("<div id=\"map\" style=\"width:90%;height:60%;\"></div><br>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("//이 스크립트는 BODY 영역에 작성 한다. \r\n");
      out.write("var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("\tmapOption = {\r\n");
      out.write("    \tcenter: new kakao.maps.LatLng(33.450701, 126.570667), // 지도의 중심좌표\r\n");
      out.write("    \tlevel: 3 // 지도의 확대 레벨\r\n");
      out.write("\t\t};  \r\n");
      out.write("//lat : 위도(latitude) , lng [long] : 경도(longitude)\r\n");
      out.write("\r\n");
      out.write("//지도를 생성합니다    \r\n");
      out.write("var map = new kakao.maps.Map(mapContainer, mapOption); \r\n");
      out.write(" \r\n");
      out.write("//주소-좌표 변환 객체를 생성합니다\r\n");
      out.write("var geocoder = new kakao.maps.services.Geocoder();\r\n");
      out.write("//coordinate [coords]\r\n");
      out.write("//:  1.조직, 편성하다  2.(몸의 움직임을) 조정하다 \r\n");
      out.write("//   3.(옷차림가구 등) 꾸미다[코디하다], 잘 어울리다[조화되다]\r\n");
      out.write("//   4.수학 에서 좌표\t\t\r\n");
      out.write("\r\n");
      out.write("//주소로 좌표를 검색합니다\r\n");
      out.write("//제주특별자치도 제주시 첨단로 242    \r\n");
      out.write("//경기 용인시 기흥구 민속촌로 90 : 용인 민속촌 \r\n");
      out.write("//경기 성남시 분당구 돌마로 46  :  그린 컴퓨터아카데미 , GreenComputer\r\n");
      out.write("\r\n");
      out.write("var address = '경기 성남시 분당구 돌마로 46' ;\r\n");
      out.write("var description = '그린 컴퓨터아카데미' ; // description: 설명,묘사\r\n");
      out.write("//geocoder.addressSearch(address, function(result, status) {..});\r\n");
      out.write("geocoder.addressSearch(address, function(result, status) { \r\n");
      out.write("\t// 정상적으로 검색이 완료됐으면\r\n");
      out.write("\tif (status === daum.maps.services.Status.OK) { \r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar coords = new daum.maps.LatLng(result[0].y, result[0].x);  \r\n");
      out.write("\t\t// 결과값으로 받은 위치를 마커로 표시합니다\r\n");
      out.write("\t\tvar marker = new daum.maps.Marker({ map: map, position: coords }); \r\n");
      out.write("\t\t// 인포윈도우로 장소에 대한 설명을 표시합니다 \r\n");
      out.write("\t\tvar infowindow = new daum.maps.InfoWindow({ \r\n");
      out.write("\t\t\t//content: description });\r\n");
      out.write("\t\t\tcontent: '<div style=\"width:150px;text-align:center;padding:6px 0;\">'+description+'</div>' }); \r\n");
      out.write("\t\tinfowindow.open(map, marker); \r\n");
      out.write("\t\t// 지도의 중심을 결과값으로 받은 위치로 이동시킵니다 \r\n");
      out.write("\t\tmap.setCenter(coords); \r\n");
      out.write("\t} // if\r\n");
      out.write("\t}); // addressSearch\r\n");
      out.write(" </script>\r\n");
      out.write("<hr><br>\r\n");
      out.write("<a href=\"home\">[HOME]</a>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
